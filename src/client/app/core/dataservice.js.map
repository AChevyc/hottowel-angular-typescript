{"version":3,"sources":["client/app/core/dataservice.ts"],"names":["app","app.core","app.core.DataService","app.core.DataService.constructor"],"mappings":"AAAA,IAAO,GAAG,CAoCT;AApCD,WAAO,GAAG;IAACA,IAAAA,IAAIA,CAoCdA;IApCUA,WAAAA,IAAIA,EAACA,CAACA;QACbC,YAAYA,CAACA;QAObA,IAAaA,WAAWA;YAEpBC,SAFSA,WAAWA,CAEAA,KAAsBA,EAC9BA,EAAgBA,EAChBA,SAAsCA,EACtCA,MAA4BA;gBAL5CC,iBAuBCA;gBArBuBA,UAAKA,GAALA,KAAKA,CAAiBA;gBAC9BA,OAAEA,GAAFA,EAAEA,CAAcA;gBAChBA,cAASA,GAATA,SAASA,CAA6BA;gBACtCA,WAAMA,GAANA,MAAMA,CAAsBA;gBAGxCA,oBAAeA,GAA8BA,cAAMA,OAAAA,KAAIA,CAACA,EAAEA,CAACA,IAAIA,CAACA,EAAEA,CAACA,EAAhBA,CAAgBA,CAACA;gBAEpEA,cAASA,GAA2BA,cAChCA,OAAAA,KAAIA,CAACA,KAAKA,CAACA,GAAGA,CAACA,aAAaA,CAACA,CACxBA,IAAIA,CAACA,KAAIA,CAACA,OAAOA,CAACA,CAClBA,KAAKA,CAACA,KAAIA,CAACA,IAAIA,CAACA,EAFrBA,CAEqBA,CAACA;gBAElBA,YAAOA,GAAgBA,UAACA,QAAQA,IAAKA,OAAAA,QAAQA,CAACA,IAAIA,EAAbA,CAAaA,CAACA;gBAEnDA,SAAIA,GAAgBA,UAACA,KAAKA;oBAC9BA,IAAIA,GAAGA,GAAGA,KAAKA,CAACA,IAAIA,CAACA,WAAWA,CAACA;oBACjCA,IAAIA,MAAMA,GAAGA,0BAA0BA,CAACA;oBACxCA,KAAIA,CAACA,SAASA,CAACA,OAAOA,CAACA,GAAGA,CAACA,CAACA,MAAMA,CAACA,CAACA;oBACpCA,MAAMA,CAACA,KAAIA,CAACA,EAAEA,CAACA,MAAMA,CAACA,GAAGA,CAACA,CAACA;gBAC/BA,CAACA,CAAAA;YAhBDA,CAACA;YALMD,mBAAOA,GAAkBA,CAACA,OAAOA,EAAEA,IAAIA,EAAEA,WAAWA,EAAEA,QAAQA,CAACA,CAACA;YAsB3EA,kBAACA;QAADA,CAvBAD,AAuBCC,IAAAD;QAvBYA,gBAAWA,GAAXA,WAuBZA,CAAAA;QAEDA,OAAOA,CACFA,MAAMA,CAACA,UAAUA,CAACA,CAClBA,OAAOA,CAACA,aAAaA,EAAEA,WAAWA,CAACA,CAACA;IAC7CA,CAACA,EApCUD,IAAIA,GAAJA,QAAIA,KAAJA,QAAIA,QAoCdA;AAADA,CAACA,EApCM,GAAG,KAAH,GAAG,QAoCT","file":"client/app/core/dataservice.js","sourceRoot":"/Users/john/_git/build/","sourcesContent":["module app.core {\n    'use strict';\n\n    export interface IDataService {\n        getMessageCount: () => ng.IPromise<number>;\n        getPeople: () => ng.IPromise<any>;\n    }\n\n    export class DataService implements IDataService {\n        static $inject: Array<string> = ['$http', '$q', 'exception', 'logger'];\n        constructor(private $http: ng.IHttpService,\n            private $q: ng.IQService,\n            private exception: blocks.exception.IException,\n            private logger: blocks.logger.Logger) {\n        }\n\n        getMessageCount: () => ng.IPromise<number> = () => this.$q.when(72);\n\n        getPeople: () => ng.IPromise<any> = () =>\n            this.$http.get('/api/people')\n                .then(this.success)\n                .catch(this.fail);\n\n        private success: (any) => {} = (response) => response.data;\n\n        private fail: (any) => {} = (error) => {\n            var msg = error.data.description;\n            var reason = 'query for people failed.';\n            this.exception.catcher(msg)(reason);\n            return this.$q.reject(msg);\n        }\n    }\n\n    angular\n        .module('app.core')\n        .service('dataservice', DataService);\n}\n"]}