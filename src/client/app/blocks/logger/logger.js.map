{"version":3,"sources":["client/app/blocks/logger/logger.ts"],"names":["blocks","blocks.logger","blocks.logger.Logger","blocks.logger.Logger.constructor","blocks.logger.Logger.log","blocks.logger.Logger.error","blocks.logger.Logger.info","blocks.logger.Logger.success","blocks.logger.Logger.warning"],"mappings":"AAAA,wDAAwD;AAExD,IAAO,MAAM,CA4CZ;AA5CD,WAAO,MAAM;IAACA,IAAAA,MAAMA,CA4CnBA;IA5CaA,WAAAA,MAAMA,EAACA,CAACA;QAClBC,YAAYA,CAACA;QAUbA,IAAaA,MAAMA;YAEfC,SAFSA,MAAMA,CAEKA,IAAoBA,EAAUA,MAAcA;gBAA5CC,SAAIA,GAAJA,IAAIA,CAAgBA;gBAAUA,WAAMA,GAANA,MAAMA,CAAQA;YAAGA,CAACA;YAEpED,qCAAqCA;YACrCA,oBAAGA,GAAHA;gBAAIE,cAAcA;qBAAdA,WAAcA,CAAdA,sBAAcA,CAAdA,IAAcA;oBAAdA,6BAAcA;;gBACdA,IAAIA,CAACA,IAAIA,CAACA,GAAGA,CAACA,IAAIA,CAACA,CAACA;YACxBA,CAACA;YAEDF,sBAAKA,GAALA,UAAMA,OAAeA,EAAEA,IAASA,EAAEA,KAAcA;gBAC5CG,IAAIA,CAACA,MAAMA,CAACA,KAAKA,CAACA,OAAOA,EAAEA,KAAKA,CAACA,CAACA;gBAClCA,IAAIA,CAACA,IAAIA,CAACA,KAAKA,CAACA,SAASA,GAAGA,OAAOA,EAAEA,YAAYA,EAAEA,KAAKA,EAAEA,YAAYA,EAAEA,IAAIA,CAACA,CAACA;YAClFA,CAACA;YAEDH,qBAAIA,GAAJA,UAAKA,OAAeA,EAAEA,IAASA,EAAEA,KAAcA;gBAC3CI,IAAIA,CAACA,MAAMA,CAACA,IAAIA,CAACA,OAAOA,EAAEA,KAAKA,CAACA,CAACA;gBACjCA,IAAIA,CAACA,IAAIA,CAACA,IAAIA,CAACA,QAAQA,GAAGA,OAAOA,EAAEA,YAAYA,EAAEA,KAAKA,EAAEA,YAAYA,EAAEA,IAAIA,CAACA,CAACA;YAChFA,CAACA;YAEDJ,wBAAOA,GAAPA,UAAQA,OAAeA,EAAEA,IAASA,EAAEA,KAAcA;gBAC9CK,IAAIA,CAACA,MAAMA,CAACA,OAAOA,CAACA,OAAOA,EAAEA,KAAKA,CAACA,CAACA;gBACpCA,IAAIA,CAACA,IAAIA,CAACA,IAAIA,CAACA,WAAWA,GAAGA,OAAOA,EAAEA,YAAYA,EAAEA,KAAKA,EAAEA,YAAYA,EAAEA,IAAIA,CAACA,CAACA;YACnFA,CAACA;YAEDL,wBAAOA,GAAPA,UAAQA,OAAeA,EAAEA,IAASA,EAAEA,KAAcA;gBAC9CM,IAAIA,CAACA,MAAMA,CAACA,OAAOA,CAACA,OAAOA,EAAEA,KAAKA,CAACA,CAACA;gBACpCA,IAAIA,CAACA,IAAIA,CAACA,IAAIA,CAACA,WAAWA,GAAGA,OAAOA,EAAEA,YAAYA,EAAEA,KAAKA,EAAEA,YAAYA,EAAEA,IAAIA,CAACA,CAACA;YACnFA,CAACA;YA1BMN,cAAOA,GAAkBA,CAACA,MAAMA,EAAEA,QAAQA,CAACA,CAACA;YA2BvDA,aAACA;QAADA,CA5BAD,AA4BCC,IAAAD;QA5BYA,aAAMA,GAANA,MA4BZA,CAAAA;QAEDA,OAAOA,CACFA,MAAMA,CAACA,eAAeA,CAACA,CACvBA,OAAOA,CAACA,QAAQA,EAAEA,MAAMA,CAACA,CAACA;IACnCA,CAACA,EA5CaD,MAAMA,GAANA,aAAMA,KAANA,aAAMA,QA4CnBA;AAADA,CAACA,EA5CM,MAAM,KAAN,MAAM,QA4CZ","file":"client/app/blocks/logger/logger.js","sourceRoot":"/Users/john/_git/angular-typescript-hottowel-demo/","sourcesContent":["/// <reference path=\"../../../../../typings/tsd.d.ts\" />\n\nmodule blocks.logger {\n    'use strict';\n\n    export interface ILogger {\n        info: (message: string, data?: {}, title?: string) => void;\n        error: (message: string, data?: {}, title?: string) => void;\n        success: (message: string, data?: {}, title?: string) => void;\n        warning: (message: string, data?: {}, title?: string) => void;\n        log: (...args: any[]) => void;\n    }\n\n    export class Logger implements ILogger {\n        static $inject: Array<string> = ['$log', 'toastr'];\n        constructor(private $log: ng.ILogService, private toastr: Toastr) {}\n\n        // straight to console; bypass toastr\n        log(...args: any[]) {\n            this.$log.log(args);\n        }\n\n        error(message: string, data?: {}, title?: string) {\n            this.toastr.error(message, title);\n            this.$log.error('Error: ' + message, '\\nSummary:', title, '\\nDetails:', data);\n        }\n\n        info(message: string, data?: {}, title?: string) {\n            this.toastr.info(message, title);\n            this.$log.info('Info: ' + message, '\\nSummary:', title, '\\nDetails:', data);\n        }\n\n        success(message: string, data?: {}, title?: string) {\n            this.toastr.success(message, title);\n            this.$log.info('Success: ' + message, '\\nSummary:', title, '\\nDetails:', data);\n        }\n\n        warning(message: string, data?: {}, title?: string) {\n            this.toastr.warning(message, title);\n            this.$log.warn('Warning: ' + message, '\\nSummary:', title, '\\nDetails:', data);\n        }\n    }\n\n    angular\n        .module('blocks.logger')\n        .service('logger', Logger);\n}\n"]}